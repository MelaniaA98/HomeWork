#5. Write a program that outputs all possibilities to put +, - or nothing between the numbers (1, ...9) such that the result is 100.



#megoldas
def szaz_szamok_jelek():
   from itertools import product #meghivjuk a csomagot, #iteration == egymas melle tesz kulonbozo helyekrol elemeket
                                                        #iterables == ertelmet ad
                                                        #product() == generator ==((x,y) for x in A for y in B)
   veg= []
   szamok = range(1, 10)
   for jelek in product(['+','-', ''], repeat=8): # ertelmezi hanyszor hasznalja
       tuples = zip(szamok, jelek + ("", )) # szamok melle a jelek
       expr = ''.join([str(e1) + e2 for (e1, e2) in tuples]) # kifejezes stringge alakitasa
                                                            #.join == metodus a szamok koze jelek
       if eval(expr) == 100: # az ertek legyen 100
                             #eval() == funkcio 

           veg.append(expr + ' = 100') #a vegehez irja a 100-ast
   return veg

print(szaz_szamok_jelek())


#probalkozas

#1.set-es es for ciklus, tul hosszu
seta={1, 12, 123}
setb={2,23}
setc={3,34}
setd={4,45}
sete={5,56}
setf={6,67}
setg={7,78,}
seth={8,89}
seti={9}
for i in seta:
    for j in setb:
        for k in setc:
            for l in setd:
                for m in sete:
                    for n in setf:
                        for o in setg:
                            for p in seth:
                                for q in seti:
                                    if i+j+k+l+m+n+o+p+q==100:
                                        print(i,"+",j,"+",k,"+",l,"+",m,"+",n,"+",o,"+",p,"+",q,"= 100")
                                    elif i-j+k+l+m+n+o+p+q==100:
                                    ...
