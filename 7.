#7. Write a program that finds the longest palindromic substring of a given string. Try to be as efficient as possible!

import string

def No_upper_white_punct(a):
    a=a.lower() #ha nagybetu van benne 
    no= string.whitespace + string.punctuation #ures resz es irasjelek

    for i in a: #vegigmegy a stringen
        if i in no: #ha i benne van a no-ban
            a=a.replace(i,'') #cserelje ki ures stringre
    print(a)






#1.stringes
def longestpalstr(a):
    c=" "
    #if a==a[::-1]: #ha az egesz szo forditotja es ertelmes
        #c+=a
    b=" "
    for i in a:
        for j in a[::-1]:
            if i==j:
                b += j
                break #ne ismetelje a betut
            else:
                a[i]=a[i+1]
                continue
    print(b)

    #print(c)


b=longestpalstr("battar")


#2. listas
a="batta"
for i in a:
    l.append(i)
print(l) #normalis lista

lf= l[::-1] #forditott lista
print(lf)

def keres():
    new=" "
    for j in l:
        for k in lf:
            if k ==j:
                new+=k
                break
            else:
                j[]+=1
                continue
    print(a)

print(keres())

